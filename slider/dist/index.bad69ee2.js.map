{"mappings":"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","sources":["src/utilities/slider/core/SliderDomManager.js","src/utilities/slider/core/Slider.js","src/utilities/animate.js","src/utilities/slider/core/DotsButtons.js","src/utilities/slider/core/SliderButtons.js","src/utilities/slider/facade/ActiveState.js","src/utilities/slider/facade/WaitingState.js","src/utilities/slider/facade/SliderController.js","src/utilities/slider/slider.js","src/utilities/slider/facade/facade.js","src/index.js","src/components/main/main.js"],"sourcesContent":["\r\nexport default class SliderDomManager {\r\n\r\n    static getSlideCount(sliderContainer) {\r\n        return sliderContainer.children.length;\r\n    }\r\n\r\n    static addSliderElements(sliderContainer) {\r\n        SliderDomManager.createSlides(sliderContainer);\r\n        SliderDomManager.createSliderButtons(sliderContainer);\r\n        SliderDomManager.addSliderStyles(sliderContainer);\r\n    }\r\n\r\n    static createSlides(sliderContainer) {\r\n        // let documentFragment = document.createDocumentFragment();\r\n        // documentFragment.appendChild(slider);\r\n\r\n        // create slider element\r\n        let slider = document.createElement(\"div\");\r\n        slider.classList.add('slider');\r\n\r\n        for (let i = 0; i < sliderContainer.children.length; i++) {\r\n            let slideContent = sliderContainer.children[i];\r\n            let slide = document.createElement(\"div\");\r\n            slide.classList.add('slide');\r\n            slide.appendChild(slideContent.cloneNode(true));\r\n            slider.appendChild(slide);\r\n        }\r\n        sliderContainer.replaceChildren(slider);\r\n    }\r\n\r\n    static createSliderButtons(sliderContainer) {\r\n        // create slider buttons\r\n        let sliderButtons = document.createElement(\"div\");\r\n        sliderButtons.classList.add('slide-controls');\r\n\r\n        const btnPrev = SliderDomManager.createButton(\"btn-prev\", \"Prev\");\r\n        const btnNext = SliderDomManager.createButton(\"btn-next\", \"Next\");\r\n\r\n        sliderButtons.appendChild(btnPrev);\r\n        sliderButtons.appendChild(btnNext);\r\n\r\n        sliderContainer.appendChild(sliderButtons);\r\n    }\r\n\r\n    static createButton(id, innerText) {\r\n        // btn prev\r\n        let btn = document.createElement(\"button\");\r\n        btn.setAttribute(\"id\", id);\r\n        let p = document.createElement(\"p\");\r\n        p.classList.add(id + '__text');\r\n        let btnPrevText = document.createTextNode(innerText);\r\n        p.appendChild(btnPrevText);\r\n        btn.appendChild(p);\r\n        return btn;\r\n    }\r\n\r\n    static addSliderStyles(sliderContainer) {\r\n        sliderContainer.classList.add('slider-container');\r\n\r\n        var style = document.createElement('style');\r\n        style.innerHTML = `\r\n            .slider-container {\r\n                position: relative;\r\n                overflow: hidden;\r\n            }\r\n            .slider {\r\n                display: flex;\r\n                height: 100%;\r\n                width: 100%;\r\n                align-items: center;\r\n                will-change: transform;\r\n            }\r\n            .slide {\r\n                position: relative;\r\n                display: flex;\r\n                align-items: center;\r\n                justify-content: center;\r\n                width: 100%;\r\n                height: 100%;\r\n            }\r\n            .slide-controls {\r\n                position: absolute;\r\n                left: 0;\r\n                top: 50%;\r\n                transform: translateY(-50%);\r\n                width: 100%;\r\n                display: flex;\r\n                justify-content: space-between;\r\n                align-items: center;\r\n            }\r\n            .slide-dot-container {\r\n                position: absolute;\r\n                bottom: 1rem;\r\n                left: 50%;\r\n                transform: translateX(-50%);\r\n                display: flex;\r\n                justify-content: center;\r\n                align-items: center;\r\n                gap: 1rem;\r\n            }\r\n        `;\r\n        document.getElementsByTagName('head')[0].appendChild(style);\r\n    }\r\n}\r\n","import animate from '../../animate';\r\nimport SliderDomManager from './SliderDomManager';\r\n\r\nexport default class Slider {\r\n\r\n    static create(\r\n        sliderContainer,\r\n        slidesToShow = 1,\r\n        slidesToScroll = 1,\r\n        duration = 500\r\n    ) {\r\n        const slideCount = SliderDomManager.getSlideCount(sliderContainer);\r\n        slidesToShow = Math.min(slidesToShow, slideCount);\r\n        slidesToScroll = Math.min(slidesToScroll, slideCount);\r\n\r\n        SliderDomManager.addSliderElements(sliderContainer);\r\n\r\n        return new Slider(sliderContainer, slidesToShow, slidesToScroll, duration);\r\n    }\r\n\r\n    scrollToSlide(slideIndex) {\r\n        const currentIndex = this._getRealIndex(this._sliderInternalIndex);\r\n\r\n        if (slideIndex !== currentIndex)\r\n            this._scroll(slideIndex - currentIndex);\r\n    }\r\n\r\n    rightScroll() {\r\n        return this._scroll(this._slidesToScroll);\r\n    }\r\n\r\n    leftScroll() {\r\n        return this._scroll(-this._slidesToScroll);\r\n    }\r\n\r\n    onAnimationStart(handler) {\r\n        this._handlerAnimationStart = handler;\r\n    }\r\n\r\n    onAnimationEnd(handler) {\r\n        this._handlerAnimationEnd = handler;\r\n    }\r\n\r\n    get length() {\r\n        return this._initialSlidesCount;\r\n    }\r\n\r\n    // ---------------------- private\r\n\r\n    _slider = document.querySelector('.slider');\r\n    _slides = [];\r\n    _initialSlidesCount = 0;\r\n    _slidesToShow;\r\n    _slidesToScroll;\r\n    _duration;\r\n    _sliderInternalIndex;\r\n    _slideWidth; // все слайды одинаковой ширины\r\n\r\n    _handlerAnimationStart = () => { }\r\n    _handlerAnimationEnd = () => { }\r\n\r\n    constructor(sliderContainer, slidesToShow, slidesToScroll, duration) {\r\n        this._slidesToShow = slidesToShow;\r\n        this._slidesToScroll = slidesToScroll;\r\n        this._duration = duration;\r\n        this._slides = this._getSlides();\r\n        this._initialSlidesCount = this._slides.length;\r\n\r\n        this._slides.forEach(s => s.style.minWidth = `${100 / slidesToShow}%`); // задали ширину слайдов\r\n        this._slideWidth = this._slides[0].clientWidth;\r\n\r\n        this._addBuffers();\r\n        this._sliderInternalIndex = this._getStartBufferLength;\r\n        this._slides = this._getSlides();\r\n\r\n        //  сдвинули вправо на слайд с индексом slidesToScroll\r\n        this._translateSliderX(-this._slideWidth * this._sliderInternalIndex)\r\n\r\n        window.addEventListener(\"resize\", () => this._onResize());\r\n    }\r\n\r\n    _onResize() {\r\n        this._slideWidth = this._slides[this._sliderInternalIndex].clientWidth;\r\n        this._slider.style.transform = `translateX(${-this._slideWidth * this._sliderInternalIndex}px)`;\r\n    }\r\n\r\n    get _getStartBufferLength() {\r\n        return Math.max(this._slidesToShow, this._slidesToScroll);\r\n    }\r\n\r\n    get _getEndBufferLength() {\r\n        return this._getStartBufferLength - 1;\r\n    }\r\n\r\n    _addBuffers() {\r\n        const startBuffer = [];\r\n        const endBuffer = [];\r\n\r\n        for (let i = 0; i < this._getStartBufferLength; ++i) {\r\n            startBuffer.unshift(this._slides[this._slides.length - 1 - i].cloneNode(true));\r\n        }\r\n        for (let i = 0; i < this._getEndBufferLength; ++i) {\r\n            endBuffer.push(this._slides[i].cloneNode(true));\r\n        }\r\n\r\n        this._slider.append(...endBuffer);\r\n        this._slider.prepend(...startBuffer);\r\n    }\r\n\r\n    _getSlides() {\r\n        return document.querySelectorAll('.slide');\r\n    }\r\n\r\n    _translateSliderX(translateX) {\r\n        this._slider.style.transform = `translateX(${translateX}px)`\r\n    }\r\n\r\n    // индекс слайда в массиве без учета буферных элементов\r\n    _getRealIndex(sliderIndex) {\r\n        return (this._initialSlidesCount + sliderIndex - this._getStartBufferLength) % this._initialSlidesCount;\r\n    }\r\n\r\n    // прокрутить слайдер на signedScrollCount слайдов ( (+) - вправо, (-) - влево)\r\n    _scroll(signedScrollCount) {\r\n        if (signedScrollCount === 0)\r\n            return;\r\n\r\n        this._handlerAnimationStart()\r\n\r\n        const sign = Math.sign(signedScrollCount);\r\n\r\n        // вправо\r\n        if (sign > 0) {\r\n            if (this._sliderInternalIndex >= this._initialSlidesCount) {\r\n                this._sliderInternalIndex %= this._initialSlidesCount;\r\n                this._translateSliderX(-this._slideWidth * this._sliderInternalIndex);\r\n            }\r\n        }\r\n        // влево\r\n        else {\r\n            if (this._sliderInternalIndex < Math.abs(signedScrollCount)) {\r\n                this._sliderInternalIndex += this._initialSlidesCount;\r\n                this._translateSliderX(-this._slideWidth * this._sliderInternalIndex);\r\n            }\r\n        }\r\n\r\n        this._animate(signedScrollCount);\r\n        this._sliderInternalIndex += signedScrollCount;\r\n\r\n        return this._getRealIndex(this._sliderInternalIndex);\r\n    }\r\n\r\n    // прокрутить слайдер на signedScrollCount слайдов ((+) - вправо, (-) - влево)\r\n    _animate(signedScrollCount) {\r\n        const startPosition = -this._slideWidth * this._sliderInternalIndex;\r\n\r\n        animate({\r\n            duration: this._duration,\r\n            timing: function (timeFraction) {\r\n                return timeFraction;\r\n            },\r\n            draw: (progress) => {\r\n                this._translateSliderX(\r\n                    startPosition - Math.round(this._slideWidth * signedScrollCount * progress));\r\n            },\r\n            animationEnd: () => {\r\n                this._handlerAnimationEnd();\r\n            }\r\n        });\r\n    }\r\n}\r\n","// Функция создания анимации\r\n//\r\n// timing(timeFraction)\r\n//      Функция расчёта времени (прогресса анимации) (от 0 до 1)\r\n//\r\n// draw(progress)\r\n//      Функция отрисовки. progress от 0 до 1\r\n//\r\n// duration\r\n//      Продолжительность анимации\r\nexport default function animate({ timing, draw, duration, animationEnd = () => { } }) {\r\n\r\n    let start = performance.now();\r\n\r\n    requestAnimationFrame(function animate(time) {\r\n        // timeFraction изменяется от 0 до 1\r\n        let timeFraction = (time - start) / duration;\r\n\r\n        if (timeFraction < 0) timeFraction = 0;\r\n        else if (timeFraction > 1) timeFraction = 1;\r\n\r\n        // вычисление текущего прогресса анимации\r\n        let progress = timing(timeFraction);\r\n\r\n        // отрисовать анимацию\r\n        draw(progress);\r\n\r\n        if (timeFraction < 1) {\r\n            requestAnimationFrame(animate);\r\n        }\r\n\r\n        if (timeFraction === 1) {\r\n            animationEnd();\r\n        }\r\n    });\r\n}\r\n","export default class DotsButtons {\r\n\r\n    _sliderContainer;\r\n    _handlerDotClick;\r\n    _dots = [];\r\n\r\n    static create(sliderContainer, count, activeIndex) {\r\n        return new DotsButtons(sliderContainer, count, activeIndex);\r\n    }\r\n\r\n    constructor(sliderContainer, count, activeIndex) {\r\n        this._sliderContainer = sliderContainer;\r\n        this.createDots(count, activeIndex)\r\n    }\r\n\r\n    onDotClick(handler) {\r\n        for (let i = 0; i < this._dots.length; ++i) {\r\n            this._dots[i].addEventListener(\"click\", () => handler(i));\r\n        }\r\n    }\r\n\r\n    /*\r\n    [...].forEach((item, index, array) => {\r\n        alert(`${item} ${index} в ${array}`);\r\n    });\r\n    */\r\n\r\n    setActive(index) {\r\n        const activeIdx = this._dots.findIndex(this.isActive);\r\n        if (index !== activeIdx) {\r\n            if (activeIdx >= 0) {\r\n                this._dots[activeIdx].classList.remove('slide-dot--active');\r\n            }\r\n            this._dots[index].classList.add('slide-dot--active');\r\n        }\r\n    }\r\n\r\n    isActive(dot) {\r\n        return dot.classList.contains('slide-dot--active');\r\n    }\r\n\r\n    createDots(dotsCount, activeIndex) {\r\n        let dotsContainer = document.createElement(\"div\");\r\n        dotsContainer.classList.add('slide-dot-container');\r\n\r\n        for (let i = 0; i < dotsCount; ++i) {\r\n            let button = document.createElement(\"button\");\r\n            button.innerHTML = `<p class=\"slide-dot-text\">${i}</p>`;\r\n            button.classList.add('slide-dot');\r\n\r\n            if (i === activeIndex) {\r\n                button.classList.add('slide-dot--active');\r\n            }\r\n            dotsContainer.appendChild(button);\r\n            this._dots.push(button);\r\n        }\r\n\r\n        this._sliderContainer.appendChild(dotsContainer);\r\n    }\r\n}\r\n","export default class RightLeftButtons {\r\n\r\n    _sliderContainer;\r\n    _btnNext = document.getElementById('btn-next');\r\n    _btnPrev = document.getElementById('btn-prev');\r\n\r\n    static create(sliderContainer) {\r\n        return new RightLeftButtons(sliderContainer);\r\n    }\r\n\r\n    constructor(sliderContainer) {\r\n        this._sliderContainer = sliderContainer;\r\n    }\r\n\r\n    onRightClick(handler) {\r\n        this._btnNext.addEventListener('click', handler);\r\n    }\r\n\r\n    onLeftClick(handler) {\r\n        this._btnPrev.addEventListener('click', handler);\r\n    }\r\n}\r\n","export default class ActiveState {\r\n\r\n    constructor(slider, btnsDots) {\r\n        this._slider = slider;\r\n        this._btnsDots = btnsDots;\r\n    }\r\n\r\n    onDotClick(index) {\r\n        this._btnsDots.setActive(index);\r\n        this._slider.scrollToSlide(index);\r\n    }\r\n\r\n    onRightClick() {\r\n        const activeSlideIndex = this._slider.rightScroll();\r\n        this._btnsDots.setActive(activeSlideIndex);\r\n    }\r\n\r\n    onLeftClick() {\r\n        const activeSlideIndex = this._slider.leftScroll();\r\n        this._btnsDots.setActive(activeSlideIndex);\r\n    }\r\n}\r\n","export default class WaitingState {\r\n\r\n    onDotClick(index) {\r\n        console.log('skipped: onDotClick: ', index);\r\n    }\r\n\r\n    onRightClick() {\r\n        console.log('skipped: onRightClick');\r\n    }\r\n\r\n    onLeftClick() {\r\n        console.log('skipped: onLeftClick');\r\n    }\r\n}\r\n","import ActiveState from './ActiveState';\r\nimport WaitingState from './WaitingState';\r\n\r\nexport default class SliderController {\r\n\r\n    constructor(slider, rightLeftButtons, dotsButtons) {\r\n\r\n        this._activeState = new ActiveState(slider, dotsButtons);\r\n        this._waitingState = new WaitingState();\r\n\r\n        this._state = this._activeState;\r\n\r\n        this.bindHandlers(slider, rightLeftButtons, dotsButtons)\r\n    }\r\n\r\n    bindHandlers(slider, rightLeftButtons, dotsButtons) {\r\n        slider.onAnimationStart(\r\n            () => this._state = this._waitingState);\r\n\r\n        slider.onAnimationEnd(\r\n            () => this._state = this._activeState);\r\n\r\n        rightLeftButtons.onRightClick(\r\n            () => this._state.onRightClick());\r\n\r\n        rightLeftButtons.onLeftClick(\r\n            () => this._state.onLeftClick());\r\n\r\n        dotsButtons.onDotClick(\r\n            index => this._state.onDotClick(index));\r\n    }\r\n}\r\n","import createSlider from './facade/facade';\r\n\r\nexport default function slider(sliderContainer, { speed = 500, slidesToShow = 1, slidesToScroll = 1 }) {\r\n    createSlider(sliderContainer, {\r\n        speed,\r\n        slidesToShow,\r\n        slidesToScroll\r\n    })\r\n}\r\n","import Slider from '../core/Slider';\r\nimport DotsButtons from '../core/DotsButtons';\r\nimport RightLeftButtons from '../core/SliderButtons';\r\nimport SliderController from './SliderController';\r\n\r\n\r\nexport default function createSlider(sliderContainer, { speed = 500, slidesToShow = 1, slidesToScroll = 1 }) {\r\n\r\n    const slider = Slider.create(\r\n        sliderContainer,\r\n        slidesToShow,\r\n        slidesToScroll,\r\n        speed\r\n    );\r\n\r\n    const btnsRightLeft = RightLeftButtons.create(\r\n        sliderContainer\r\n    );\r\n\r\n    const btnsDots = DotsButtons.create(\r\n        sliderContainer,\r\n        slider.length,\r\n        0\r\n    );\r\n\r\n    new SliderController(slider, btnsRightLeft, btnsDots);\r\n}\r\n","import main from './components/main/main';\r\n\r\nwindow.onload = () => {\r\n    main();\r\n}\r\n","import slider from '../../utilities/slider/slider';\r\n\r\nexport default function main() {\r\n    const sliderContainer = document.querySelector('.main__slider');\r\n\r\n    slider(sliderContainer, {\r\n        speed: 500,\r\n        slidesToShow: 1,\r\n        slidesToScroll: 1\r\n    });\r\n}\r\n"],"names":["$565d06c38925e745$export$2e2bcd8739ae039","static","sliderContainer","children","length","createSlides","createSliderButtons","addSliderStyles","slider","document","createElement","classList","add","i","slideContent","slide","appendChild","cloneNode","replaceChildren","sliderButtons","btnPrev","createButton","btnNext","id","innerText","btn","setAttribute","p","btnPrevText","createTextNode","style","innerHTML","$ccc71d5b14bf350b$export$2e2bcd8739ae039","slidesToShow","slidesToScroll","duration","slideCount","getSlideCount","Math","min","addSliderElements","scrollToSlide","slideIndex","currentIndex","this","_getRealIndex","_sliderInternalIndex","_scroll","rightScroll","_slidesToScroll","leftScroll","onAnimationStart","handler","_handlerAnimationStart","onAnimationEnd","_handlerAnimationEnd","_initialSlidesCount","_slider","querySelector","_slides","_slidesToShow","_duration","_slideWidth","constructor","_getSlides","forEach","s","minWidth","clientWidth","_addBuffers","_getStartBufferLength","_translateSliderX","window","addEventListener","_onResize","transform","max","_getEndBufferLength","startBuffer","endBuffer","unshift","i1","push","append","prepend","querySelectorAll","translateX","sliderIndex","signedScrollCount","sign","abs","_animate","startPosition","timing","draw","animationEnd","start","performance","now","requestAnimationFrame","$3020aa7b20ee6688$export$2e2bcd8739ae039","time","timeFraction","progress","round","$7a3cd989426053ba$export$2e2bcd8739ae039","_sliderContainer","_handlerDotClick","_dots","count","activeIndex","createDots","onDotClick","index","activeIdx","findIndex","isActive","remove","dot","contains","dotsCount","dotsContainer","button","$1bfdd23620bdb18d$export$2e2bcd8739ae039","_btnNext","getElementById","_btnPrev","onRightClick","onLeftClick","$e9aae78d5739099f$export$2e2bcd8739ae039","btnsDots","_btnsDots","setActive","activeSlideIndex","$4cb60aa8bce470d7$export$2e2bcd8739ae039","console","log","$6ab72b10361e6e12$export$2e2bcd8739ae039","rightLeftButtons","dotsButtons","_activeState","_waitingState","_state","bindHandlers","$b1694dacdae5037c$export$2e2bcd8739ae039","speed","create","btnsRightLeft","$0ad516706ee8bcc6$export$2e2bcd8739ae039","onload"],"version":3,"file":"index.bad69ee2.js.map"}